.chat-screen { /* 화면 전체에 컬러 입히기 ; html body 부분에 id든 class든 줘서 css로 색 입혀용*/
  background-color: #abc1d1;
}


/* header 부분 space between이 아닌 width 33% 줘서 정가운데 맞추는 방법 ; css의 hack라고 함*/
.chat_alt-header {
  display: flex;
  padding: var(--horizontal-space);
  padding-top: 40px;
  margin-bottom: 15px;
  align-items: center;
  justify-content: center;
  background-color: #abc1d1;
  position: fixed;
  width: 100%;
  box-sizing: border-box;
  top:0;
  z-index: 1;      /* z-index: ; 란 Layer 개념! 절대적(absolue) 고정(fixed) 위치에서 순서를 설정할 수 있음 */
                   /*status-bar가 2등. chat_alt-header 1등 왜냐, chat_alt-header가 더 크니깐 덮어줘야지.*/
}

.chat_alt-header__title {
  font-size: 32px;
  font-weight: 600;
}

.chat_alt-header__column {
  width: 33%;
}

.chat_alt-header__column span:last-child{
  margin-left: 25px;
}


.chat_alt-header__column:nth-child(2){
  display: flex;
  justify-content: center;
}

.chat_alt-header__column:last-child{
  display: flex;
  justify-content: flex-end;
}

/* header 부분 space between이 아닌 width 33% 줘서 정가운데 맞추는 방법 ; css의 hack라고 함*/


.status-bar__chat-real{   /* status-bar에는 badkground 컬러가 tatus-bar 빼고 나머지 부분에만 입혀져서 네이밍만 수정 후 (status-bar__chat-real) 따로 white 없애주고 본컬러 입혀줌. */
  top: 0px;
  position: fixed;
  width: 100%;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  padding: 5px 3px;
  border-bottom: 1px solid rgba(226, 226, 226, 0.12);
  z-index: 2;     /* z-index: ; 란 Layer 개념! 절대적(absolue) 고정(fixed) 위치에서 순서를 설정할 수 있음. 
                     status-bar가 2등. chat_alt-header 1등 왜냐, chat_alt-header가 더 크니깐 덮어줘야지.*/
}


.main-chat {
  margin-top: 100px;
  display: flex;
  flex-direction: column;
  align-items: center;
}


@keyframes fadeIn {
  from{
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}


.chat__timestamp {
  color: white;
  background-color: #92a4b2;
  padding: 15px;
  border-radius: 25px;
  font-size: 14px;
  margin-bottom: 25px;
  animation: fadeIn 0.5s ease-in-out;
}

.message-row{
  width: 100%;
  display: flex;   /*요소들이 옆으로 오게 하려면 무조건!! flex!!*/
  margin-bottom: 5px;
}


@keyframes fadeIn-text {
  from {
    transform: translateX(-7px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.message-row img{
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-right: 10px;
  animation: fadeIn-text 0.5s ease-in-out;
}


.message__author
{
  margin-bottom: 5px;
  display: block;   /* margin-bottom 을 주려면 span 은 inline 이기 때문에 block을 줘야함*/
  animation: fadeIn-text 0.5s ease-in-out;
}


.message__bubble{
  background-color: white;
  padding: 13px;
  font-size: 16px;
  border-radius: 16px;
  border-top-left-radius: 0px;   /* 각 모서리마다 radius를 주고 싶다면, 요 명령어를 사용해보자! ex) 오른쪽 border-top-right-radius*/
  margin-right: 5px;
}



@keyframes fadeIn-right {    /* 이 부분 중요!! 안보였다가 보이게 하고 싶으면 거꾸로 생각해, 위치를 지정해주지 않으면 자동으로 안보이는 쪽에 있어.
                                그렇담 보이고 싶은 해당 부분에 opacity 0 주고 아래처럼 위치 적어주면 됨*/
    from {

    }
    to {
    opacity:1;
    transform: none;
    }
    }

.message__talk{
  display: flex;
  align-items: flex-end;
  transform: translateX(-10px);   /* 여기가 보이고 싶은 위치야. 그리고 처음부터 안보이게 opacity 0 으로 주고 애니메이션으로 후에 보여줄거니깐. */
  opacity: 0;
  animation: fadeIn-right 0.5s ease-in-out forwards;
  animation-delay: 0.3s;
}

.message-row__content2 .message__talk {
  animation-delay: 0.6s;
}

.message-row__content .message__talk {
  animation-delay: 1s;
}

.message-row__own .message__talk {
  animation-delay: 1.5s;
}

.message-row__own2 .message__talk {
  animation-delay: 1.9s;
}

.message__author,
.message__time{
  opacity: 0.8;
  font-size: 14px;
}

/*연달아 대화창에 따로 margin 값 주고 싶어 아래와 같이 각각의 class로 복붙해줌*/

.message-row__author1{
  width: 100%;
  display: flex;   /*요소들이 옆으로 오게 하려면 무조건!! flex!!*/
  margin-top: 4px;
}

.message-row__author1 img{
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-right: 10px;
}

.message-row__imgopa{       /* 연달아 대화창에 따로 margin 값은주고 싶고, 크기는 유지했으면 좋겠어서 class 의 class 를 지정함*/
  opacity: 0;
}


/* 똑같이 거울 모드로 방향만 바꾸고 싶을땐? class의 class를 지정해서 (modifier)   justify-content: flex-end;  */
.main-screen .message-row__own{
  margin-top: 40px;
  justify-content: flex-end;
}

/* modifier 해준거에 속성만 건드릴 수 있음*/
.message-row__own .message__bubble{ 
  background-color: var(--yellow);
  border-top-right-radius: 0;
  border-top-left-radius: 16px;
  margin-right: 0;
  margin-left: 5px;
}

/* 아래 것도 같은 성질을 가진 아이를 반대로 뒤집기에 좋지만, 명령어를 많이 써야 하기에! flex-direction 을 사용해볼까? 아래 있음 

.message-row__own .message__buble{                  /*order 기능은 순서를 서로 바꿔주는 거임, flex children에게만 적용 가능 
  order: 1;
}
.message-row__own .message__time{
  order: 0;
}

*/

/* 위에꺼보다 훨신 짧은 명령어로 반대로 뒤집을 수 있지롱*/
.message-row__own .message__talk{
  flex-direction: row-reverse;
}


/*아래는 똑같은 대화창에 margin 값을 없애주고 싶어서 복붙한거임 class명 다른걸로 지정해서! */

.main-screen .message-row__own2{
  margin-top: 9px;
  justify-content: flex-end;
}

/* modifier 해준거에 속성만 건드릴 수 있음*/
.message-row__own2 .message__bubble{ 
  background-color: var(--yellow);
  border-top-right-radius: 0;
  border-top-left-radius: 16px;
  margin-right: 0;
  margin-left: 5px;
}

/* 아래 것도 같은 성질을 가진 아이를 반대로 뒤집기에 좋지만, 명령어를 많이 써야 하기에! flex-direction 을 사용해볼까? 아래 있음 

.message-row__own .message__buble{                  /*order 기능은 순서를 서로 바꿔주는 거임, flex children에게만 적용 가능 
  order: 1;
}
.message-row__own .message__time{
  order: 0;
}

*/

/* 위에꺼보다 훨신 짧은 명령어로 반대로 뒤집을 수 있지롱*/
.message-row__own2 .message__talk{
  flex-direction: row-reverse;
}


.reply{
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  padding: 5px 25px;
  box-sizing: border-box;   /* 위에 padding 을 해서 안보이는 요소들을 위해 border-box 주기 */
  align-items: center;
  transition: transform .3s ease-in-out;
}

.reply .reply__column:first-child{    /* iinput 에 width 100% 로 잡을때 각각 넓이를 다르게 할 때, 요렇게  */
  width: 10%;
}

.reply .reply__column:last-child{
  width: 90%;
  position: relative;   /* input 위에 button과 icon 올릴려면, reply__column:last-child 에 relative를 주고 absolute */
}

.reply i {
  opacity: 0.5;
}

.reply input {
  padding: 12px;
  width: 100%;   /* input 에 width 100% 로 잡을때 각각 넓이를 다르게 할 때, 요렇게  */
  border: var(--main-border);
  border-radius: 20px;
  box-sizing: border-box;
  transition: all .3s ease-in-out;    /* 애니메이션에 부드러움 추가 */ 
}

.reply__column:last-child > i,   /* > (부호!!!) 는 button 안에 있는 아이콘만 제외하고 나머지 아이콘만 선택하고 싶을 때, */
.reply__column:last-child > button{
  position: absolute;   /* input 위에 button과 icon 올릴려면, reply__column:last-child 에 relative를 주고 absolute */
  right: 10px;
  top: 7px;
}


.reply__column:last-child > i{    /* > (부호!!!) 는 button 안에 있는 아이콘만 제외하고 나머지 아이콘만 선택하고 싶을 때, */
  right: 45px;
  top: 14px;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 28px;
  height: 28px;
  border-radius: 50%;
}

.reply__column button i {
  opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
  outline: none;
}


.reply .reply__column:first-child,    /* 양 옆에들 요소 이동 */
.reply .fa-smile-wink,
.reply button {
  transition: opacity .3s ease-in-out;   /* 애니메이션에 부드러움 추가 */ 
}


.reply:focus-within .reply__column:first-child,    /* 해당 클래스 안에 어떤 element(요소)가 focus(선택) 되어 있다면 아래 행동을 해라 */
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
  opacity: 0;
}

.reply input:focus {       /* 아래 명령어들로 input을 클릭하면 창이 넓어지면서 내려가고 올라가고 오케이? */
  width: 92vw;
  transform: translateX(-12%) translateY(-80px);
}


.reply:focus-within {
  transform: translateY(60px);
}